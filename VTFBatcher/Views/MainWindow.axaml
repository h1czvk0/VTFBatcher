<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:VTFBatcher.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="using:VTFBatcher.Converters"
        mc:Ignorable="d" d:DesignWidth="1200" d:DesignHeight="700"
        x:Class="VTFBatcher.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/VTFBatcher_icon.ico"
        Title="VTF批量转换器">

	<Window.Resources>
		<converters:PascalCaseHumanizeConverter x:Key="PascalCaseHumanizeConverter" />
		<converters:AndConverter x:Key="AndConverter" />
		<converters:StringEnumConverter x:Key="EnumConverter" />
	</Window.Resources>

	<Window.Styles>
		<Style Selector="TextBlock:disabled">
			<Setter Property="Foreground" Value="Gray" />
		</Style>

		<Style Selector="Expander">
			<Setter Property="Background" Value="Transparent" />
		</Style>

		<Style Selector="ListBox#NormalPicturePathListBox">
			<Setter Property="ContextMenu">
				<ContextMenu>
					<MenuItem Header="打开目录"
                              Command="{Binding OpenNormalItemsDirectoryCommand}"
                              CommandParameter="{Binding #NormalPicturePathListBox.SelectedItems}" />
					<MenuItem Header="删除"
                              Command="{Binding DeleteNormalSelectedItemsCommand}"
                              CommandParameter="{Binding #NormalPicturePathListBox.SelectedItems}" />
				</ContextMenu>
			</Setter>
		</Style>

		<Style Selector="ListBox#IncapPicturePathListBox">
			<Setter Property="ContextMenu">
				<ContextMenu>
					<MenuItem Header="打开目录"
                              Command="{Binding OpenIncapItemsDirectoryCommand}"
                              CommandParameter="{Binding #IncapPicturePathListBox.SelectedItems}" />
					<MenuItem Header="删除"
                              Command="{Binding DeleteIncapSelectedItemsCommand}"
                              CommandParameter="{Binding #IncapPicturePathListBox.SelectedItems}" />
				</ContextMenu>
			</Setter>
		</Style>

		<Style Selector="ListBox#NormalPicturePathListBox:empty">
			<Setter Property="ContextMenu" Value="{x:Null}" />
		</Style>

		<Style Selector="ListBox#IncapPicturePathListBox:empty">
			<Setter Property="ContextMenu" Value="{x:Null}" />
		</Style>

	</Window.Styles>

	<Design.DataContext>
		<vm:MainWindowViewModel />
	</Design.DataContext>

	<DockPanel>
		<Menu DockPanel.Dock="Top">
			<MenuItem Header="文件">
				<MenuItem Header="导入正常贴图目录" Command="{Binding SelectNormalInputDirectoryCommand}"></MenuItem>
				<MenuItem Header="导入正常贴图文件" Command="{Binding SelectNormalInputFilesCommand}"></MenuItem>
				<Separator />
				<MenuItem Header="导入倒地贴图目录" Command="{Binding SelectIncapInputDirectoryCommand}"></MenuItem>
				<MenuItem Header="导入倒地贴图文件" Command="{Binding SelectIncapInputFilesCommand}"></MenuItem>
				<Separator />
				<MenuItem Header="清空所有" Command="{Binding ClearAllItemsCommand}"></MenuItem>
				<MenuItem Header="重置所有预设" Command="{Binding ResetPresetsCommand}"></MenuItem>
			</MenuItem>
		</Menu>

		<Grid ColumnDefinitions="Auto,Auto,*,Auto,*">
			<Border BorderBrush="Gray" BorderThickness="1" CornerRadius="3" Padding="4" Margin="5">
				<Grid RowDefinitions="Auto, Auto">
					<TextBlock Grid.Row="0" Text="预设:" Margin="10,5,5,5" FontSize="15" FontWeight="SemiBold"></TextBlock>
					<ScrollViewer Grid.Row="1">
						<StackPanel Name="PresetPanel" Spacing="5" Margin="10">
							<RadioButton GroupName="PresetOption"
                                         IsChecked="{Binding SelectedPreset, Converter={StaticResource EnumConverter}, Mode=TwoWay, ConverterParameter=None}"
                                         Content="无"
                                         IsEnabled="{Binding PresetAvailable}" />
							<Expander Header="角色界面贴图" >
								<StackPanel IsEnabled="{Binding PresetAvailable}">
									<CheckBox Content="Nick (gambler)" IsChecked="{Binding PresetNick, Mode=TwoWay}" />
									<CheckBox Content="Ellis (mechanic)" IsChecked="{Binding PresetEllis}" />
									<CheckBox Content="Rochelle (producer)" IsChecked="{Binding PresetRochelle}" />
									<CheckBox Content="Coach (coach)" IsChecked="{Binding PresetCoach}" />
									<Separator HorizontalAlignment="Stretch" />
									<CheckBox Content="Bill (namvet)" IsChecked="{Binding PresetBill}" />
									<CheckBox Content="Louis (manager)" IsChecked="{Binding PresetLouis}" />
									<CheckBox Content="Zoey (teenangst)" IsChecked="{Binding PresetZoey}" />
									<CheckBox Content="Francis (biker)" IsChecked="{Binding PresetFrancis}" />
								</StackPanel>
							</Expander>
						</StackPanel>
					</ScrollViewer>
				</Grid>
			</Border>

			<!-- 正常贴图列表 -->
			<Border Grid.Column="2" BorderBrush="Gray" BorderThickness="1" CornerRadius="3" Padding="4" Margin="5">
				<Grid RowDefinitions="Auto,*">
					<TextBlock Grid.Row="0" Text="正常贴图" FontWeight="SemiBold" Margin="5" HorizontalAlignment="Center"/>
					<ListBox Grid.Row="1" Name="NormalPicturePathListBox" HorizontalAlignment="Stretch"
                             VerticalAlignment="Stretch"
                             ItemsSource="{Binding NormalPicturePaths}"
                             SelectionMode="Multiple"
                             KeyDown="NormalPicturePathListBox_DeleteKeyDown"
                             SelectionChanged="NormalPicturePathListBox_OnSelectionChanged"
                             DragDrop.AllowDrop="True"
                             DragDrop.DragOver="NormalPicturePathListBox_OnDragOver"
                             DragDrop.Drop="NormalPicturePathListBox_OnDrop"
                             Margin="5">
					</ListBox>
				</Grid>
			</Border>

			<GridSplitter Grid.Column="3" />

			<!-- 倒地贴图列表和设置 -->
			<Grid Grid.Column="4" RowDefinitions="*,*">
				<!-- 倒地贴图列表 -->
				<Border BorderBrush="Gray" BorderThickness="1" CornerRadius="3" Padding="4" Margin="5">
					<Grid RowDefinitions="Auto,*">
						<TextBlock Grid.Row="0" Text="倒地贴图" FontWeight="SemiBold" Margin="5" HorizontalAlignment="Center"/>
						<ListBox Grid.Row="1" Name="IncapPicturePathListBox" HorizontalAlignment="Stretch"
                                 VerticalAlignment="Stretch"
                                 ItemsSource="{Binding IncapPicturePaths}"
                                 SelectionMode="Multiple"
                                 KeyDown="IncapPicturePathListBox_DeleteKeyDown"
                                 SelectionChanged="IncapPicturePathListBox_OnSelectionChanged"
                                 DragDrop.AllowDrop="True"
                                 DragDrop.DragOver="IncapPicturePathListBox_OnDragOver"
                                 DragDrop.Drop="IncapPicturePathListBox_OnDrop"
                                 Margin="5">
						</ListBox>
					</Grid>
				</Border>

				<!-- 设置面板 -->
				<ScrollViewer Grid.Row="1" Margin="5">
					<StackPanel>
						<Grid ColumnDefinitions="*,*" RowDefinitions="Auto,Auto,Auto,Auto" RowSpacing="10">
							<StackPanel Grid.ColumnSpan="2" Name="NormalSettingsPanel">
								<TextBlock Text="普通格式:" FontWeight="SemiBold" Margin="2,0,0,0" VerticalAlignment="Center" />
								<Border BorderBrush="Gray" BorderThickness="1" CornerRadius="3" Padding="4">
									<Grid ColumnDefinitions="*,*" RowDefinitions="Auto,Auto" RowSpacing="4">
										<TextBlock Text="普通格式:" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
										<ComboBox Grid.Row="0" Grid.Column="1" HorizontalAlignment="Stretch"
                                                  ItemsSource="{Binding ImageFormats}"
                                                  SelectedIndex="{Binding SelectedNormalFormatIndex}" />

										<TextBlock Grid.Row="1" Grid.Column="0" Text="透明格式:" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
										<ComboBox Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch"
                                                  ItemsSource="{Binding ImageFormats}"
                                                  SelectedIndex="{Binding SelectedAlphaFormatIndex}" />
									</Grid>
								</Border>
							</StackPanel>

							<StackPanel Grid.Row="1" Grid.ColumnSpan="2" Grid.Column="0">
								<TextBlock Text="尺寸调整:" FontWeight="SemiBold" Margin="2,0,0,0" VerticalAlignment="Center" />
								<Border BorderBrush="Gray" BorderThickness="1" CornerRadius="3" Padding="4">
									<Grid ColumnDefinitions="*,*" RowDefinitions="Auto,Auto,Auto,Auto,Auto,Auto,Auto" RowSpacing="4">
										<CheckBox IsChecked="{Binding IfResize}">调整尺寸</CheckBox>

										<TextBlock Grid.Row="1" Grid.Column="0" Text="调整方法:" HorizontalAlignment="Stretch" VerticalAlignment="Center" IsEnabled="{Binding IfResize}" />
										<ComboBox Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch"
                                                  ItemsSource="{Binding ResizeMethods}"
                                                  SelectedIndex="{Binding SelectedResizeMethodIndex}"
                                                  IsEnabled="{Binding IfResize}">
											<ComboBox.ItemTemplate>
												<DataTemplate>
													<TextBlock Text="{Binding Converter={StaticResource PascalCaseHumanizeConverter}}"></TextBlock>
												</DataTemplate>
											</ComboBox.ItemTemplate>
										</ComboBox>

										<TextBlock Grid.Row="2" Grid.Column="0" Text="调整滤镜:" HorizontalAlignment="Stretch" VerticalAlignment="Center" IsEnabled="{Binding IfResize}" />
										<ComboBox Grid.Row="2" Grid.Column="1" HorizontalAlignment="Stretch"
                                                  ItemsSource="{Binding ResizeFilters}"
                                                  SelectedIndex="{Binding SelectedResizeFilterIndex}"
                                                  IsEnabled="{Binding IfResize}" />

										<TextBlock Grid.Row="3" Grid.Column="0" Text="锐化滤镜:" HorizontalAlignment="Stretch" VerticalAlignment="Center" IsEnabled="{Binding IfResize}" />
										<ComboBox Grid.Row="3" Grid.Column="1" HorizontalAlignment="Stretch"
                                                  ItemsSource="{Binding SharpenFilters}"
                                                  SelectedIndex="{Binding SelectedResizeSharpenFilterIndex}"
                                                  IsEnabled="{Binding IfResize}" />

										<CheckBox Grid.Row="4" Grid.Column="0" IsChecked="{Binding IfClamp}" Margin="0,5,0,0" IsEnabled="{Binding IfResize}">限制尺寸</CheckBox>

										<TextBlock Grid.Row="5" Grid.Column="0" Text="最大宽度:" HorizontalAlignment="Stretch" VerticalAlignment="Center">
											<TextBlock.IsEnabled>
												<MultiBinding Converter="{StaticResource AndConverter}">
													<Binding Path="IfClamp" />
													<Binding Path="IfResize" />
												</MultiBinding>
											</TextBlock.IsEnabled>
										</TextBlock>
										<ComboBox Grid.Row="5" Grid.Column="1" HorizontalAlignment="Stretch"
                                                  ItemsSource="{Binding ClampSizes}"
                                                  SelectedIndex="{Binding SelectedMaximumWidthIndex}">
											<ComboBox.IsEnabled>
												<MultiBinding Converter="{StaticResource AndConverter}">
													<Binding Path="IfClamp" />
													<Binding Path="IfResize" />
												</MultiBinding>
											</ComboBox.IsEnabled>
										</ComboBox>

										<TextBlock Grid.Row="6" Grid.Column="0" Text="最大高度:" HorizontalAlignment="Stretch" VerticalAlignment="Center">
											<TextBlock.IsEnabled>
												<MultiBinding Converter="{StaticResource AndConverter}">
													<Binding Path="IfClamp" />
													<Binding Path="IfResize" />
												</MultiBinding>
											</TextBlock.IsEnabled>
										</TextBlock>
										<ComboBox Grid.Row="6" Grid.Column="1" HorizontalAlignment="Stretch"
                                                  ItemsSource="{Binding ClampSizes}"
                                                  SelectedIndex="{Binding SelectedMaximumHeightIndex}">
											<ComboBox.IsEnabled>
												<MultiBinding Converter="{StaticResource AndConverter}">
													<Binding Path="IfClamp" />
													<Binding Path="IfResize" />
												</MultiBinding>
											</ComboBox.IsEnabled>
										</ComboBox>
									</Grid>
								</Border>
							</StackPanel>

							<StackPanel Grid.Row="2" Grid.ColumnSpan="2" Grid.Column="0" Name="MipmapSettingsPanel">
								<TextBlock Text="多级纹理:" FontWeight="SemiBold" Margin="2,0,0,0" VerticalAlignment="Center" />
								<Border BorderBrush="Gray" BorderThickness="1" CornerRadius="3" Padding="4">
									<Grid ColumnDefinitions="*,*" RowDefinitions="Auto,Auto,Auto" RowSpacing="4">
										<CheckBox Grid.Row="0" Grid.Column="0" IsChecked="{Binding IfGenerateMipmaps}">生成多级纹理</CheckBox>

										<TextBlock Grid.Row="1" Grid.Column="0" Text="多级纹理滤镜:" HorizontalAlignment="Stretch" VerticalAlignment="Center" IsEnabled="{Binding IfGenerateMipmaps}" />
										<ComboBox Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch"
                                                  ItemsSource="{Binding ResizeFilters}"
                                                  SelectedIndex="{Binding SelectedMipmapFilterIndex}"
                                                  IsEnabled="{Binding IfGenerateMipmaps}" />

										<TextBlock Grid.Row="2" Grid.Column="0" Text="锐化滤镜:" HorizontalAlignment="Stretch" VerticalAlignment="Center" IsEnabled="{Binding IfGenerateMipmaps}" />
										<ComboBox Grid.Row="2" Grid.Column="1" HorizontalAlignment="Stretch"
                                                  ItemsSource="{Binding SharpenFilters}"
                                                  SelectedIndex="{Binding SelectedMipmapSharpenFilterIndex}"
                                                  IsEnabled="{Binding IfGenerateMipmaps}" />
									</Grid>
								</Border>

								<Grid ColumnDefinitions="*,*">
									<TextBlock Text="VTF版本:" VerticalAlignment="Center" Margin="4,5,0,0" FontWeight="SemiBold" />
									<ComboBox Grid.Column="1" HorizontalAlignment="Stretch" Margin="0,5,0,0"
                                              ItemsSource="{Binding VTFVersions}" SelectedItem="{Binding Version}" />
								</Grid>
							</StackPanel>
						</Grid>

						<Grid ColumnDefinitions="*,Auto,Auto" Margin="0,10,0,0" ColumnSpacing="5">
							<TextBox Grid.Column="0" HorizontalAlignment="Stretch" Text="{Binding OutputDirectory}"></TextBox>
							<Button Grid.Column="1" Content="选择输出目录" HorizontalAlignment="Right" Command="{Binding SelectOutputDirectoryCommand}" />
							<Button Grid.Column="2" Content="打开目录" Command="{Binding OpenOutputDirectoryCommand}" />
						</Grid>

						<Button Content="开始转换" Command="{Binding StartConvertCommand}" Margin="0,10,0,0" />
					</StackPanel>
				</ScrollViewer>
			</Grid>
		</Grid>
	</DockPanel>
</Window>
